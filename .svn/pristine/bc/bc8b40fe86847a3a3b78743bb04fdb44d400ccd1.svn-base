//  Stack class test program
//
//  Tests: XXX 
//

#include "stack.hpp"
#include <cassert>
#include <iostream>

//===========================================================================
int main ()
{
    {
        std::cout << "------------------------------------------------------" << std::endl;
        std::cout << "- Testing stack<int> :" << std::endl << std::endl;
        //------------------------------------------------------
        // SETUP FIXTURE

        // TEST
        stack<int> stackOne;
        
        for(int i = 0; i < 10; ++i) {
            stackOne.push(i + i);
        }

        stackOne.~stack();

        assert(stackOne.empty());
        std::cout << "Calling Destructor Empties Stack" << std::endl;
    }
    {
        std::cout << "------------------------------------------------------" << std::endl;
        std::cout << "- Testing stack<float> :" << std::endl << std::endl;
        //------------------------------------------------------
        // SETUP FIXTURE

        // TEST
        stack<int> stackOne;
        
        for(int i = 0; i < 10; ++i) {
            stackOne.push(i * 1.453);
        }

        stackOne.~stack();

        assert(stackOne.empty());
        std::cout << "Calling Destructor Empties Stack" << std::endl;
    }    
    {
        std::cout << "------------------------------------------------------" << std::endl;
        std::cout << "- Testing stack<char> :" << std::endl << std::endl;
        //------------------------------------------------------
        // SETUP FIXTURE

        // TEST
        stack<char> stackOne;
        
        for(int i = 0; i < 10; ++i) {
            stackOne.push('a' + i);
        }

        stackOne.~stack();

        assert(stackOne.empty());
        std::cout << "Calling Destructor Empties Stack" << std::endl;
    }
    {
        std::cout << "------------------------------------------------------" << std::endl;
        std::cout << "- Testing stack<bool> :" << std::endl << std::endl;
        //------------------------------------------------------
        // SETUP FIXTURE

        // TEST
        stack<char> stackOne;
        
        for(int i = 0; i < 10; ++i) {
            stackOne.push(i % 2);
        }

        stackOne.~stack();

        assert(stackOne.empty());
        std::cout << "Calling Destructor Empties Stack" << std::endl;
    }    
    {
        std::cout << "------------------------------------------------------" << std::endl;
        std::cout << "- Testing stack<String> :" << std::endl << std::endl;
        //------------------------------------------------------
        // SETUP FIXTURE

        // TEST
        stack<String> stackOne;
        
        stackOne.push('a');
        stackOne.push("Hello");
        stackOne.push(String());
        stackOne.push("12#$^#@23&*$");
        stackOne.push("Cool!");

        stackOne.~stack();

        assert(stackOne.empty());
        std::cout << "Calling Destructor Empties Stack" << std::endl;
    }

    std::cout << "------------------------------------------------------" << std::endl;
    std::cout << "Done testing Destructor." << std::endl;
    std::cout << "------------------------------------------------------" << std::endl;
    return 0;
}

