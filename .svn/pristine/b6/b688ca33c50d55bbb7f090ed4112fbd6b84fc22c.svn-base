// string Test Program
//
// Tests: concatenation

#include <iostream> 
#include <cassert>
#include "string.hpp"

//===========================================================================
int main () {
    std::cout << "----------------------------------------------------" << std::endl;
    {
        //------------------------------------------------------
        // Setup fixture
        std::cout << "-     Test 1: " << std::endl;

        // Test 
        String stringOne = "Woo";
        String stringTwo = "Foo";

        // Verify
        assert(stringOne == "Woo");
        std::cout << "Woo == Woo" << std::endl;

        assert(stringTwo == "Foo");
        std::cout << "Foo == Foo" << std::endl;

        stringOne += stringTwo;

        assert(stringOne == "WooFoo");
        std::cout << "WooFoo == WooFoo" << std::endl;

        assert(stringTwo == "Foo");
        std::cout << "Foo == Foo" << std::endl;

        stringTwo += stringOne;
        
        assert(stringTwo == "FooWooFoo");
        std::cout << "FooWooFoo == FooWooFoo" << std::endl;

        assert(stringOne == "WooFoo");
        std::cout << "WooFoo == WooFoo" << std::endl;

        std::cout << "----------------------------------------------------" << std::endl;
    }
    {
        //------------------------------------------------------
        // Setup fixture
        std::cout << "-     Test 2: " << std::endl;

        // Test 
        String stringOne = "Woo";

        // Verify
        assert(stringOne == "Woo");
        std::cout << "Woo == Woo" << std::endl;

        stringOne += 'f';

        assert(stringOne == "Woof");
        std::cout << "Woof == Woof" << std::endl;

        stringOne += "oot";

        assert(stringOne == "Woofoot");
        std::cout << "Woofoot == Woofoot" << std::endl;

        std::cout << "----------------------------------------------------" << std::endl;
    }

    std::cout << "Dont testing concatenation." << std::endl;
    std::cout << "----------------------------------------------------" << std::endl;
}