/*
* Simon Halaszi
* string project
* CS23001
*/

// Testing subscript overloading

#include <iostream> 
#include <cassert>
#include "string.hpp"

//===========================================================================
int main () {
    std::cout << "----------------------------------------------------" << std::endl; 
    {
        String alphabet = "-ABCDEFGHIJKLMNOPQRSTUVWXYZ";

        std::cout << "Testing String: " << '"' << alphabet << '"' << std::endl;

        assert(alphabet[1] == 'A');
        assert(alphabet[2] == 'B');
        assert(alphabet[3] == 'C');
        assert(alphabet[24] == 'X');
        assert(alphabet[25] == 'Y');
        assert(alphabet[26] == 'Z');

        std::cout << "Subscript returning correct indexes" << std::endl;

        alphabet[24] = 'A';
        alphabet[25] = 'B';
        alphabet[26] = 'C';
        alphabet[1] = 'X';
        alphabet[2] = 'Y';
        alphabet[3] = 'Z';

        std::cout << "Modifier subscript changed characters" << std::endl;
        std::cout << "New String: " << '"' << alphabet << '"' << std::endl;

        assert(alphabet[24] == 'A');
        assert(alphabet[25] == 'B');
        assert(alphabet[26] == 'C');
        assert(alphabet[1] == 'X');
        assert(alphabet[2] == 'Y');
        assert(alphabet[3] == 'Z');

        std::cout << "Subscript returning correct indexes" << std::endl;
    }
    {
        //------------------------------------------------------
        // Setup fixture
        std::cout << "-     Test 2 (EMPTY): " << std::endl;

        // Test 
        String stringOne;
        std::cout << "Looking through: " << '"' << stringOne << '"' << std::endl;

        // Verify
        assert(stringOne[0] == '\0');
        std::cout << "First index of empty character is a null character" << std::endl;
    }
    {
        //------------------------------------------------------
        // Setup fixture
        std::cout << "-     Test 3 (AT CAPACITY): " << std::endl;

        // Test 
        String stringOne = "Hello World, this is my very long String used for at-capacity testing. This String is two hundred and fifty-six characters long. That is including the null character at the end of the string. There isn't much else to say here about this string. I love CS!";
        std::cout << "Looking through: " << '"' << stringOne << '"' << std::endl;

        // Verify
        assert(stringOne[0] == 'H');
        assert(stringOne[stringOne.capacity() - 1] == '!');
        assert(stringOne[stringOne.capacity()] == '\0');
    }

    std::cout << std::endl << "Done testing subscript." << std::endl;
    std::cout << "----------------------------------------------------" << std::endl;    
}