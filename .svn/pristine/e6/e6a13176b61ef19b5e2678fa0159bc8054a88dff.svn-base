//  Stack class test program
//
//  Tests: XXX 
//

#include "stack.hpp"
#include <cassert>
#include <iostream>

//===========================================================================
int main ()
{

        {
            std::cout << "------------------------------------------------------" << std::endl;
            std::cout << "- Testing stack<int> :" << std::endl;


            //------------------------------------------------------
            // SETUP FIXTURE
            std::cout << "------------------------------------------------------" << std::endl;            

            stack<int>  x;
            
            int ele = 1;
            std::cout << "Pushing " << ele << std::endl;

            x.push(ele);
            assert(x.top() == ele);

            std::cout << "Element pushed onto stack == " << ele << std::endl;
            
            int poppedEle = x.pop();
            assert(poppedEle == ele);

            std::cout << "Element popped off stack == " << ele << std::endl;
        }
        {
            //------------------------------------------------------
            // SETUP FIXTURE
            std::cout << "------------------------------------------------------" << std::endl;

            stack<int>  x;

            int eles[10] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
            std::cout << "Pushing and array of ints: { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, }"  << std::endl;

            std::cout << "Element pushed onto stack == { ";
            for(int i = 0; i < 10; ++i) {
                x.push(eles[i]);
                assert(x.top() == eles[i]);
                std::cout << eles[i] << ", ";
            }
            std::cout << "}" << std::endl;
            
            std::cout << "Element popped off stack == { ";
            for(int i = 9; i >= 0; --i) {
                int poppedEle = x.pop();
                assert(poppedEle == eles[i]);
                std::cout << eles[i] << ", ";
            }
            std::cout << "}" << std::endl;  
        }
        {
            std::cout << "------------------------------------------------------" << std::endl;
            std::cout << "- Testing stack<float> :" << std::endl;   


            //------------------------------------------------------
            // SETUP FIXTURE
            std::cout << "------------------------------------------------------" << std::endl;            

            stack<float>  x;
            
            float ele = 1.23542;
            std::cout << "Pushing " << ele << std::endl;

            x.push(ele);
            assert(x.top() == ele);

            std::cout << "Element pushed onto stack == " << ele << std::endl;
            
            float poppedEle = x.pop();
            assert(poppedEle == ele);

            std::cout << "Element popped off stack == " << ele << std::endl;
        }
        {
            //------------------------------------------------------
            // SETUP FIXTURE
            std::cout << "------------------------------------------------------" << std::endl;

            stack<float>  x;

            float eles[10] = {1.3453, 1.234, 2.453, 3.1415926, 4.12312, 5.45645, 10.2345345, 7.5674, 8.123, 9.76867};
            std::cout << "Pushing and array of floats: { 1.3453, 1.234, 2.453, 3.1415926, 4.12312, 5.45645, 10.2345345, 7.5674, 8.123, 9,76867, }"  << std::endl;

            std::cout << "Element pushed onto stack == { ";
            for(int i = 0; i < 10; ++i) {
                x.push(eles[i]);
                assert(x.top() == eles[i]);
                std::cout << eles[i] << ", ";
            }
            std::cout << "}" << std::endl;
            
            std::cout << "Element popped off stack == { ";
            for(int i = 9; i >= 0; --i) {
                float poppedEle = x.pop();
                assert(poppedEle == eles[i]);
                std::cout << eles[i] << ", ";
            }
            std::cout << "}" << std::endl;  
        }
        {
            std::cout << "------------------------------------------------------" << std::endl;
            std::cout << "- Testing stack<char> :" << std::endl;

            //------------------------------------------------------
            // SETUP FIXTURE
            std::cout << "------------------------------------------------------" << std::endl;            

            stack<char>  x;
            
            char ele = '|';
            std::cout << "Pushing " << ele << std::endl;

            x.push(ele);
            assert(x.top() == ele);

            std::cout << "Element pushed onto stack == " << ele << std::endl;
            
            char poppedEle = x.pop();
            assert(poppedEle == ele);

            std::cout << "Element popped off stack == " << ele << std::endl;
        }
        {
            //------------------------------------------------------
            // SETUP FIXTURE
            std::cout << "------------------------------------------------------" << std::endl;

            stack<char>  x;

            char eles[10] = { 'A', 'B', 'C', 'X', 'Y', 'Z', '#', '@', '!', '&'};
            std::cout << "Pushing and array of chars: { A, B, C, X, Y, Z, #, @, !, &, }"  << std::endl;

            std::cout << "Element pushed onto stack == { ";
            for(int i = 0; i < 10; ++i) {
                x.push(eles[i]);
                assert(x.top() == eles[i]);
                std::cout << eles[i] << ", ";
            }
            std::cout << "}" << std::endl;
            
            std::cout << "Element popped off stack == { ";
            for(int i = 9; i >= 0; --i) {
                char poppedEle = x.pop();
                assert(poppedEle == eles[i]);
                std::cout << eles[i] << ", ";
            }
            std::cout << "}" << std::endl;  
        }
        {
            std::cout << "------------------------------------------------------" << std::endl;
            std::cout << "- Testing stack<bool> :" << std::endl;

            //------------------------------------------------------
            // SETUP FIXTURE
            std::cout << "------------------------------------------------------" << std::endl;            

            stack<bool>  x;
            
            bool ele = true;
            std::cout << "Pushing " << ele << std::endl;

            x.push(ele);
            assert(x.top() == ele);

            std::cout << "Element pushed onto stack == " << ele << std::endl;
            
            bool poppedEle = x.pop();
            assert(poppedEle == ele);

            std::cout << "Element popped off stack == " << ele << std::endl;
        }
        {
            //------------------------------------------------------
            // SETUP FIXTURE
            std::cout << "------------------------------------------------------" << std::endl;

            stack<bool>  x;

            bool eles[10] = {true, false, true, true, false, false, true, true, true, false};
            std::cout << "Pushing and array of bools: { 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, }"  << std::endl;

            std::cout << "Element pushed onto stack == { ";
            for(int i = 0; i < 10; ++i) {
                x.push(eles[i]);
                assert(x.top() == eles[i]);
                std::cout << eles[i] << ", ";
            }
            std::cout << "}" << std::endl;
            
            std::cout << "Element popped off stack == { ";
            for(int i = 9; i >= 0; --i) {
                bool poppedEle = x.pop();
                assert(poppedEle == eles[i]);
                std::cout << eles[i] << ", ";
            }
            std::cout << "}" << std::endl;  
        }                          
        {
            std::cout << "------------------------------------------------------" << std::endl;
            std::cout << "- Testing stack<String> :" << std::endl;

            //------------------------------------------------------
            // SETUP FIXTURE
            std::cout << "------------------------------------------------------" << std::endl;            

            stack<String>  x;
            
            String ele = "Hello!";
            std::cout << "Pushing " << ele << std::endl;

            x.push(ele);
            assert(x.top() == ele);

            std::cout << "Element pushed onto stack == " << ele << std::endl;
            
            String poppedEle = x.pop();
            assert(poppedEle == ele);

            std::cout << "Element popped off stack == " << ele << std::endl;
        }
        {
            //------------------------------------------------------
            // SETUP FIXTURE
            std::cout << "------------------------------------------------------" << std::endl;

            stack<String>  x;

            String eles[7] = {"Hello", " World", '!', " How", " Are", " You", '?'};
            std::cout << "Pushing and array of Strings: { Hello,  World, !,  How,  Are,  You, ?, }"  << std::endl;

            std::cout << "Element pushed onto stack == { ";
            for(int i = 0; i < 7; ++i) {
                x.push(eles[i]);
                assert(x.top() == eles[i]);
                std::cout << eles[i] << ", ";
            }
            std::cout << "}" << std::endl;
            
            std::cout << "Element popped off stack == { ";
            for(int i = 6; i >= 0; --i) {
                String poppedEle = x.pop();
                assert(poppedEle == eles[i]);
                std::cout << eles[i] << ", ";
            }
            std::cout << "}" << std::endl;  
        } 

    
    std::cout << "------------------------------------------------------" << std::endl;
    std::cout << "Done testing Push Pop." << std::endl;
    std::cout << "------------------------------------------------------" << std::endl;
    return 0;
}

